# Gets all tasks with pagination and search filtering
query GetSearchedFolders(
  $projectName: String!
  $search: String
  $after: String
  $first: Int
  $before: String
  $last: Int
) {
  project(name: $projectName) {
    name
    folders(
      search: $search
      after: $after
      first: $first
      before: $before
      last: $last
      sortBy: "name"
    ) {
      pageInfo {
        startCursor
        endCursor
        hasNextPage
        hasPreviousPage
      }
      edges {
        cursor
        node {
          id
          name
          label
          folderType
          parent {
            path
          }
        }
      }
    }
  }
}

# Gets all tasks with pagination and search filtering
query GetSearchedProducts(
  $projectName: String!
  $search: String
  $parentIds: [String!]
  $after: String
  $first: Int
  $before: String
  $last: Int
) {
  project(name: $projectName) {
    name
    products(
      search: $search
      folderIds: $parentIds
      after: $after
      first: $first
      before: $before
      last: $last
      sortBy: "name"
    ) {
      pageInfo {
        startCursor
        endCursor
        hasNextPage
        hasPreviousPage
      }
      edges {
        cursor
        node {
          id
          name
          productType
          folder {
            path
          }
        }
      }
    }
  }
}

# Gets all tasks with pagination and search filtering
query GetSearchedRepresentations(
  $projectName: String!
  $search: String
  $parentIds: [String!]
  $after: String
  $first: Int
  $before: String
  $last: Int
) {
  project(name: $projectName) {
    name
    representations(
      search: $search
      versionIds: $parentIds
      after: $after
      first: $first
      before: $before
      last: $last
    ) {
      pageInfo {
        startCursor
        endCursor
        hasNextPage
        hasPreviousPage
      }
      edges {
        cursor
        node {
          id
          name
          version {
            name
            product {
              name
              folder {
                path
              }
            }
          }
        }
      }
    }
  }
}

# Gets all tasks with pagination and search filtering
query GetSearchedTasks(
  $projectName: String!
  $search: String
  $parentIds: [String!]
  $after: String
  $first: Int
  $before: String
  $last: Int
) {
  project(name: $projectName) {
    name
    tasks(
      search: $search
      folderIds: $parentIds
      after: $after
      first: $first
      before: $before
      last: $last
      sortBy: "name"
    ) {
      pageInfo {
        startCursor
        endCursor
        hasNextPage
        hasPreviousPage
      }
      edges {
        cursor
        node {
          id
          name
          label
          taskType
          folder {
            path
          }
        }
      }
    }
  }
}

# Gets all tasks with pagination and search filtering
query GetSearchedVersions(
  $projectName: String!
  $search: String
  $parentIds: [String!]
  $after: String
  $first: Int
  $before: String
  $last: Int
) {
  project(name: $projectName) {
    name
    versions(
      search: $search
      productIds: $parentIds
      after: $after
      first: $first
      before: $before
      last: $last
    ) {
      pageInfo {
        startCursor
        endCursor
        hasNextPage
        hasPreviousPage
      }
      edges {
        cursor
        node {
          id
          name
          product {
            name
            folder {
              path
            }
          }
        }
      }
    }
  }
}

# Gets all tasks with pagination and search filtering
query GetSearchedWorkfiles(
  $projectName: String!
  $search: String
  $parentIds: [String!]
  $after: String
  $first: Int
  $before: String
  $last: Int
) {
  project(name: $projectName) {
    name
    workfiles(
      search: $search
      taskIds: $parentIds
      after: $after
      first: $first
      before: $before
      last: $last
    ) {
      pageInfo {
        startCursor
        endCursor
        hasNextPage
        hasPreviousPage
      }
      edges {
        cursor
        node {
          id
          name
          task {
            name
            folder {
              path
            }
          }
        }
      }
    }
  }
}
